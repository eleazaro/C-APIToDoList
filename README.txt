# Servidor ASP .NET Core Web API - Lista de Tarefas

Este projeto √© um servidor **ASP .NET Core Web API** que gerencia uma lista de tarefas. Ele fornece endpoints para opera√ß√µes **CRUD** (*Create, Read, Update, Delete*) e utiliza **Entity Framework Core** com **SQL Server** para a persist√™ncia de dados.

---

##  Estrutura do Projeto

O projeto est√° organizado em diferentes camadas para separar as responsabilidades:

### **1. Services**
- Implementa√ß√£o dos servi√ßos de aplica√ß√£o.

### **2. Controllers**
- Controladores que lidam com as requisi√ß√µes HTTP.

### **3. Domain**
Cont√©m as entidades e interfaces de reposit√≥rio.
- **Entities**: Defini√ß√£o das entidades do dom√≠nio.
- **Repositories**: Interfaces de reposit√≥rio.

### **4. Infrastructure**
Cont√©m a implementa√ß√£o da infraestrutura.
- **Data**: Configura√ß√£o e acesso a dados.
- **Repositories**: Implementa√ß√£o dos reposit√≥rios.
- **Migrations**: Migra√ß√µes do banco de dados.

### **5. Configura√ß√£o**
- **`appsettings.json`**: Configura√ß√µes da aplica√ß√£o, incluindo a string de conex√£o com o banco de dados.

---

## üóÑ Banco de Dados - SQL Server

O projeto utiliza **SQL Server** como banco de dados. O **Entity Framework Core** √© configurado para se conectar ao **SQL Server**.

### **Migrations**

As migra√ß√µes foram habilitadas para garantir a consist√™ncia do banco de dados. Isso permite que o esquema do banco de dados seja versionado e atualizado conforme o modelo de dados evolui.

#### **Como Aplicar Migra√ß√µes**

1. Certifique-se de que a string de conex√£o com o banco de dados est√° correta no arquivo `appsettings.json`.
2. Execute o seguinte comando no terminal para aplicar as migra√ß√µes:

   ```sh
   dotnet ef database update
